@startuml
scale 1.5

'floating note
'   Нужно придумать, как часто и на каком наборе 
'   данных выполнять этот алгоритм в реальной системе.
'end note

start

:(+) трансформировать данные в табличный вид;

:(+) измерить @IAT потока; 
'note : как в модели, так и в реальной системе

:(+) выполнить преобразование @IAT к интенсивности;
'note : @lambda = map 1/$_, @IAT;

:(+) выполнить интерполяцию;
'note
'   Алгоритм интерполяции следующий.
'   Начиная с 1й секунды повторять будущие значения.
'   Например: %было = ( 2 => 0.5, 5 => 0.33, 8 => 0.33 }
'   %должно_стать = ( 1 => 0.5, 2 => 0.5, map { $_ => 0.33 } (3..8) )
'end note

:(+) выполнить поиск периода;
'note : получить значение периода

:(+) выполнить коррекцию периода;
'note : +- 1 корреляция по полупериоду

:(+) разделить на группы по периоду;
'note : как на слайде с диаграммой в dot

:(+) выполнить усреднение по группам;
'note : и получить массив с красивым периодом

:(+) аппроксимировать группы, определить M и Nu;
'note
'   Получится мультиэкспоненциальное распределение,
'   которое в идеале должно совпадать на соседних группах,
'   потому что должен быть примерно похожий Nu.
'
'   Надо подумать, а может усреднить Nu_x? 
'end note

fork
:(+) аппроксимировать множество M синусом;
'note : получится синус с коэффициентами

fork again
:( ) аппроксимировать множество M полиномом;

fork again
:( ) аппроксимировать множество M линией;

end fork

:( ) с помощью корреляции выбрать наиболее \nудачную функцию аппроксимации параметра;

:( ) собрать воедино всю информацию и \nполучить модель распределения;

end
@enduml
